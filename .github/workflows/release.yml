# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release Workflow

on: push
#  workflow_dispatch:

jobs:
  version:
    name: Version Job
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.version }}
      previous-version: ${{ steps.gitversion.outputs.previous-version }}
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history

      - name: Git Version
        id: gitversion
        uses: codacy/git-version@2.5.4

      - name: Display GitVersion outputs
        run: |
          echo "Version: ${{ steps.gitversion.outputs.version }}"
          echo "Previous Version: ${{ steps.gitversion.outputs.previous-version }}"
          
  build:
    name: Build Job
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: version

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}   # checkout the correct branch name
        fetch-depth: 0                # fetch the whole repo history

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      env:
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_SECRET_KEY_PASSWORD }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
      run: |
        echo $JRELEASER_GPG_PUBLIC_KEY
        mvn -B deploy -Passemble -Prelease -Drevision="1.0.0" --file pom.xml "-Djreleaser.dry.run=true"

    - name: Display JReleaser output
      run: |
        ls
        cat app/target/jreleaser/trace.log
